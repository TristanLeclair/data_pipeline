services:
  zookeeper:
    restart: always
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper-volume:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    container_name: zookeeper
    networks:
      - kafka-net

  kafka:
    restart: always
    image: docker.io/bitnami/kafka:3.3
    ports:
      - "9093:9093"
    volumes:
      - "kafka-volume:/bitnami"
    networks:
      - kafka-net
    healthcheck:
      test: kafka-topics.sh --list --bootstrap-server localhost:9092 || exit 1
      interval: 1s
      timeout: 60s
      retries: 60
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_LISTENERS: CLIENT://:9092,EXTERNAL://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: CLIENT://kafka:9092,EXTERNAL://localhost:9093
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: CLIENT
    depends_on:
      - zookeeper
    container_name: kafka

  python_producer:
    build: ./producer/
    extends:
      file: ./common-services.yaml
      service: kafka_dependers
    container_name: producer
    develop:
      watch:
        - path: ./producer/
          action: sync
          target: /app

  transformer_average:
    build: ./transformer_average/
    extends:
      file: ./common-services.yaml
      service: transformer

  transformer_high_low:
    build: ./transformer_high_low/
    extends:
      file: ./common-services.yaml
      service: transformer

  transformer_i18n:
    build: ./transformer_i18n/
    extends:
      file: ./common-services.yaml
      service: transformer

volumes:
  kafka-volume:
  zookeeper-volume:

networks:
  kafka-net:
    driver: bridge
